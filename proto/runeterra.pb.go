// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: proto/runeterra.proto

package proto

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Core struct {
	Keywords             []*Keyword `protobuf:"bytes,1,rep,name=keywords,proto3" json:"keywords,omitempty"`
	Regions              []*Region  `protobuf:"bytes,2,rep,name=regions,proto3" json:"regions,omitempty"`
	SpellSpeeds          []*ID      `protobuf:"bytes,3,rep,name=spell_speeds,json=spellSpeeds,proto3" json:"spellSpeeds"`
	Rarities             []*ID      `protobuf:"bytes,4,rep,name=rarities,proto3" json:"rarities"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Core) Reset()         { *m = Core{} }
func (m *Core) String() string { return proto.CompactTextString(m) }
func (*Core) ProtoMessage()    {}
func (*Core) Descriptor() ([]byte, []int) {
	return fileDescriptor_88b91daf5f3c2b1a, []int{0}
}
func (m *Core) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Core.Unmarshal(m, b)
}
func (m *Core) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Core.Marshal(b, m, deterministic)
}
func (m *Core) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Core.Merge(m, src)
}
func (m *Core) XXX_Size() int {
	return xxx_messageInfo_Core.Size(m)
}
func (m *Core) XXX_DiscardUnknown() {
	xxx_messageInfo_Core.DiscardUnknown(m)
}

var xxx_messageInfo_Core proto.InternalMessageInfo

func (m *Core) GetKeywords() []*Keyword {
	if m != nil {
		return m.Keywords
	}
	return nil
}

func (m *Core) GetRegions() []*Region {
	if m != nil {
		return m.Regions
	}
	return nil
}

func (m *Core) GetSpellSpeeds() []*ID {
	if m != nil {
		return m.SpellSpeeds
	}
	return nil
}

func (m *Core) GetRarities() []*ID {
	if m != nil {
		return m.Rarities
	}
	return nil
}

type ID struct {
	NameRef              string   `protobuf:"bytes,1,opt,name=name_ref,json=nameRef,proto3" json:"nameRef"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ID) Reset()         { *m = ID{} }
func (m *ID) String() string { return proto.CompactTextString(m) }
func (*ID) ProtoMessage()    {}
func (*ID) Descriptor() ([]byte, []int) {
	return fileDescriptor_88b91daf5f3c2b1a, []int{1}
}
func (m *ID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ID.Unmarshal(m, b)
}
func (m *ID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ID.Marshal(b, m, deterministic)
}
func (m *ID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ID.Merge(m, src)
}
func (m *ID) XXX_Size() int {
	return xxx_messageInfo_ID.Size(m)
}
func (m *ID) XXX_DiscardUnknown() {
	xxx_messageInfo_ID.DiscardUnknown(m)
}

var xxx_messageInfo_ID proto.InternalMessageInfo

func (m *ID) GetNameRef() string {
	if m != nil {
		return m.NameRef
	}
	return ""
}

func (m *ID) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Keyword struct {
	*ID                  `protobuf:"bytes,1,opt,name=id,proto3,embedded=id" json:""`
	Description          string   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Keyword) Reset()         { *m = Keyword{} }
func (m *Keyword) String() string { return proto.CompactTextString(m) }
func (*Keyword) ProtoMessage()    {}
func (*Keyword) Descriptor() ([]byte, []int) {
	return fileDescriptor_88b91daf5f3c2b1a, []int{2}
}
func (m *Keyword) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Keyword.Unmarshal(m, b)
}
func (m *Keyword) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Keyword.Marshal(b, m, deterministic)
}
func (m *Keyword) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Keyword.Merge(m, src)
}
func (m *Keyword) XXX_Size() int {
	return xxx_messageInfo_Keyword.Size(m)
}
func (m *Keyword) XXX_DiscardUnknown() {
	xxx_messageInfo_Keyword.DiscardUnknown(m)
}

var xxx_messageInfo_Keyword proto.InternalMessageInfo

func (m *Keyword) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type Region struct {
	*ID                  `protobuf:"bytes,1,opt,name=id,proto3,embedded=id" json:""`
	Abbreviation         string   `protobuf:"bytes,2,opt,name=abbreviation,proto3" json:"abbreviation,omitempty"`
	IconAbsolutePath     string   `protobuf:"bytes,3,opt,name=icon_absolute_path,json=iconAbsolutePath,proto3" json:"icon_absolute_path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Region) Reset()         { *m = Region{} }
func (m *Region) String() string { return proto.CompactTextString(m) }
func (*Region) ProtoMessage()    {}
func (*Region) Descriptor() ([]byte, []int) {
	return fileDescriptor_88b91daf5f3c2b1a, []int{3}
}
func (m *Region) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Region.Unmarshal(m, b)
}
func (m *Region) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Region.Marshal(b, m, deterministic)
}
func (m *Region) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Region.Merge(m, src)
}
func (m *Region) XXX_Size() int {
	return xxx_messageInfo_Region.Size(m)
}
func (m *Region) XXX_DiscardUnknown() {
	xxx_messageInfo_Region.DiscardUnknown(m)
}

var xxx_messageInfo_Region proto.InternalMessageInfo

func (m *Region) GetAbbreviation() string {
	if m != nil {
		return m.Abbreviation
	}
	return ""
}

func (m *Region) GetIconAbsolutePath() string {
	if m != nil {
		return m.IconAbsolutePath
	}
	return ""
}

type SpellSpeed struct {
	*ID                  `protobuf:"bytes,1,opt,name=id,proto3,embedded=id" json:""`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SpellSpeed) Reset()         { *m = SpellSpeed{} }
func (m *SpellSpeed) String() string { return proto.CompactTextString(m) }
func (*SpellSpeed) ProtoMessage()    {}
func (*SpellSpeed) Descriptor() ([]byte, []int) {
	return fileDescriptor_88b91daf5f3c2b1a, []int{4}
}
func (m *SpellSpeed) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpellSpeed.Unmarshal(m, b)
}
func (m *SpellSpeed) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpellSpeed.Marshal(b, m, deterministic)
}
func (m *SpellSpeed) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpellSpeed.Merge(m, src)
}
func (m *SpellSpeed) XXX_Size() int {
	return xxx_messageInfo_SpellSpeed.Size(m)
}
func (m *SpellSpeed) XXX_DiscardUnknown() {
	xxx_messageInfo_SpellSpeed.DiscardUnknown(m)
}

var xxx_messageInfo_SpellSpeed proto.InternalMessageInfo

type Rarity struct {
	*ID                  `protobuf:"bytes,1,opt,name=id,proto3,embedded=id" json:""`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Rarity) Reset()         { *m = Rarity{} }
func (m *Rarity) String() string { return proto.CompactTextString(m) }
func (*Rarity) ProtoMessage()    {}
func (*Rarity) Descriptor() ([]byte, []int) {
	return fileDescriptor_88b91daf5f3c2b1a, []int{5}
}
func (m *Rarity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Rarity.Unmarshal(m, b)
}
func (m *Rarity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Rarity.Marshal(b, m, deterministic)
}
func (m *Rarity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Rarity.Merge(m, src)
}
func (m *Rarity) XXX_Size() int {
	return xxx_messageInfo_Rarity.Size(m)
}
func (m *Rarity) XXX_DiscardUnknown() {
	xxx_messageInfo_Rarity.DiscardUnknown(m)
}

var xxx_messageInfo_Rarity proto.InternalMessageInfo

type Set struct {
	Cards                []*Card  `protobuf:"bytes,1,rep,name=cards,proto3" json:""`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Set) Reset()         { *m = Set{} }
func (m *Set) String() string { return proto.CompactTextString(m) }
func (*Set) ProtoMessage()    {}
func (*Set) Descriptor() ([]byte, []int) {
	return fileDescriptor_88b91daf5f3c2b1a, []int{6}
}
func (m *Set) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Set.Unmarshal(m, b)
}
func (m *Set) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Set.Marshal(b, m, deterministic)
}
func (m *Set) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Set.Merge(m, src)
}
func (m *Set) XXX_Size() int {
	return xxx_messageInfo_Set.Size(m)
}
func (m *Set) XXX_DiscardUnknown() {
	xxx_messageInfo_Set.DiscardUnknown(m)
}

var xxx_messageInfo_Set proto.InternalMessageInfo

func (m *Set) GetCards() []*Card {
	if m != nil {
		return m.Cards
	}
	return nil
}

type Card struct {
	CardCode             string   `protobuf:"bytes,1,opt,name=cardCode,proto3" json:"cardCode"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	AssociatedCards      []string `protobuf:"bytes,3,rep,name=associated_cards,json=associatedCards,proto3" json:"associatedCards"`
	AssociatedCardRefs   []string `protobuf:"bytes,4,rep,name=associated_card_refs,json=associatedCardRefs,proto3" json:"associatedCardRefs"`
	Assets               []*Asset `protobuf:"bytes,5,rep,name=assets,proto3" json:"assets,omitempty"`
	Region               string   `protobuf:"bytes,6,opt,name=region,proto3" json:"region,omitempty"`
	RegionRef            string   `protobuf:"bytes,7,opt,name=region_ref,json=regionRef,proto3" json:"regionRef"`
	Attack               int64    `protobuf:"varint,8,opt,name=attack,proto3" json:"attack,omitempty"`
	Cost                 int64    `protobuf:"varint,9,opt,name=cost,proto3" json:"cost,omitempty"`
	Health               int64    `protobuf:"varint,10,opt,name=health,proto3" json:"health,omitempty"`
	Description          string   `protobuf:"bytes,11,opt,name=description,proto3" json:"description,omitempty"`
	DescriptionRaw       string   `protobuf:"bytes,12,opt,name=description_raw,json=descriptionRaw,proto3" json:"descriptionRaw"`
	FlavorText           string   `protobuf:"bytes,13,opt,name=flavor_text,json=flavorText,proto3" json:"flavorText"`
	ArtistName           string   `protobuf:"bytes,14,opt,name=artist_name,json=artistName,proto3" json:"artistName"`
	Keywords             []string `protobuf:"bytes,15,rep,name=keywords,proto3" json:"keywords,omitempty"`
	KeywordRefs          []string `protobuf:"bytes,16,rep,name=keyword_refs,json=keywordRefs,proto3" json:"keywordRefs"`
	SpellSpeed           string   `protobuf:"bytes,17,opt,name=spell_speed,json=spellSpeed,proto3" json:"spellSpeed"`
	Rarity               string   `protobuf:"bytes,18,opt,name=rarity,proto3" json:"rarity,omitempty"`
	RarityRef            string   `protobuf:"bytes,19,opt,name=rarity_ref,json=rarityRef,proto3" json:"rarityRef"`
	Subtype              string   `protobuf:"bytes,20,opt,name=subtype,proto3" json:"subtype,omitempty"`
	Supertype            string   `protobuf:"bytes,21,opt,name=supertype,proto3" json:"supertype,omitempty"`
	Type                 string   `protobuf:"bytes,22,opt,name=type,proto3" json:"type,omitempty"`
	Collectible          bool     `protobuf:"varint,23,opt,name=collectible,proto3" json:"collectible,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Card) Reset()         { *m = Card{} }
func (m *Card) String() string { return proto.CompactTextString(m) }
func (*Card) ProtoMessage()    {}
func (*Card) Descriptor() ([]byte, []int) {
	return fileDescriptor_88b91daf5f3c2b1a, []int{7}
}
func (m *Card) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Card.Unmarshal(m, b)
}
func (m *Card) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Card.Marshal(b, m, deterministic)
}
func (m *Card) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Card.Merge(m, src)
}
func (m *Card) XXX_Size() int {
	return xxx_messageInfo_Card.Size(m)
}
func (m *Card) XXX_DiscardUnknown() {
	xxx_messageInfo_Card.DiscardUnknown(m)
}

var xxx_messageInfo_Card proto.InternalMessageInfo

func (m *Card) GetCardCode() string {
	if m != nil {
		return m.CardCode
	}
	return ""
}

func (m *Card) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Card) GetAssociatedCards() []string {
	if m != nil {
		return m.AssociatedCards
	}
	return nil
}

func (m *Card) GetAssociatedCardRefs() []string {
	if m != nil {
		return m.AssociatedCardRefs
	}
	return nil
}

func (m *Card) GetAssets() []*Asset {
	if m != nil {
		return m.Assets
	}
	return nil
}

func (m *Card) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *Card) GetRegionRef() string {
	if m != nil {
		return m.RegionRef
	}
	return ""
}

func (m *Card) GetAttack() int64 {
	if m != nil {
		return m.Attack
	}
	return 0
}

func (m *Card) GetCost() int64 {
	if m != nil {
		return m.Cost
	}
	return 0
}

func (m *Card) GetHealth() int64 {
	if m != nil {
		return m.Health
	}
	return 0
}

func (m *Card) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Card) GetDescriptionRaw() string {
	if m != nil {
		return m.DescriptionRaw
	}
	return ""
}

func (m *Card) GetFlavorText() string {
	if m != nil {
		return m.FlavorText
	}
	return ""
}

func (m *Card) GetArtistName() string {
	if m != nil {
		return m.ArtistName
	}
	return ""
}

func (m *Card) GetKeywords() []string {
	if m != nil {
		return m.Keywords
	}
	return nil
}

func (m *Card) GetKeywordRefs() []string {
	if m != nil {
		return m.KeywordRefs
	}
	return nil
}

func (m *Card) GetSpellSpeed() string {
	if m != nil {
		return m.SpellSpeed
	}
	return ""
}

func (m *Card) GetRarity() string {
	if m != nil {
		return m.Rarity
	}
	return ""
}

func (m *Card) GetRarityRef() string {
	if m != nil {
		return m.RarityRef
	}
	return ""
}

func (m *Card) GetSubtype() string {
	if m != nil {
		return m.Subtype
	}
	return ""
}

func (m *Card) GetSupertype() string {
	if m != nil {
		return m.Supertype
	}
	return ""
}

func (m *Card) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Card) GetCollectible() bool {
	if m != nil {
		return m.Collectible
	}
	return false
}

type Asset struct {
	GameAbsolutePath     string   `protobuf:"bytes,1,opt,name=game_absolute_path,json=gameAbsolutePath,proto3" json:"game_absolute_path,omitempty"`
	FullAbsolutePath     string   `protobuf:"bytes,2,opt,name=full_absolute_path,json=fullAbsolutePath,proto3" json:"full_absolute_path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Asset) Reset()         { *m = Asset{} }
func (m *Asset) String() string { return proto.CompactTextString(m) }
func (*Asset) ProtoMessage()    {}
func (*Asset) Descriptor() ([]byte, []int) {
	return fileDescriptor_88b91daf5f3c2b1a, []int{8}
}
func (m *Asset) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Asset.Unmarshal(m, b)
}
func (m *Asset) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Asset.Marshal(b, m, deterministic)
}
func (m *Asset) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Asset.Merge(m, src)
}
func (m *Asset) XXX_Size() int {
	return xxx_messageInfo_Asset.Size(m)
}
func (m *Asset) XXX_DiscardUnknown() {
	xxx_messageInfo_Asset.DiscardUnknown(m)
}

var xxx_messageInfo_Asset proto.InternalMessageInfo

func (m *Asset) GetGameAbsolutePath() string {
	if m != nil {
		return m.GameAbsolutePath
	}
	return ""
}

func (m *Asset) GetFullAbsolutePath() string {
	if m != nil {
		return m.FullAbsolutePath
	}
	return ""
}

type Deck struct {
	DeckCode             string           `protobuf:"bytes,1,opt,name=deck_code,json=deckCode,proto3" json:"DeckCode"`
	CardsInDeck          map[string]int64 `protobuf:"bytes,2,rep,name=cards_in_deck,json=cardsInDeck,proto3" json:"CardsInDeck" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Deck) Reset()         { *m = Deck{} }
func (m *Deck) String() string { return proto.CompactTextString(m) }
func (*Deck) ProtoMessage()    {}
func (*Deck) Descriptor() ([]byte, []int) {
	return fileDescriptor_88b91daf5f3c2b1a, []int{9}
}
func (m *Deck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Deck.Unmarshal(m, b)
}
func (m *Deck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Deck.Marshal(b, m, deterministic)
}
func (m *Deck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Deck.Merge(m, src)
}
func (m *Deck) XXX_Size() int {
	return xxx_messageInfo_Deck.Size(m)
}
func (m *Deck) XXX_DiscardUnknown() {
	xxx_messageInfo_Deck.DiscardUnknown(m)
}

var xxx_messageInfo_Deck proto.InternalMessageInfo

func (m *Deck) GetDeckCode() string {
	if m != nil {
		return m.DeckCode
	}
	return ""
}

func (m *Deck) GetCardsInDeck() map[string]int64 {
	if m != nil {
		return m.CardsInDeck
	}
	return nil
}

type Screen struct {
	ScreenWidth          int32    `protobuf:"varint,1,opt,name=screen_width,json=screenWidth,proto3" json:"ScreenWidth"`
	ScreenHeight         int32    `protobuf:"varint,2,opt,name=screen_height,json=screenHeight,proto3" json:"ScreenHeight"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Screen) Reset()         { *m = Screen{} }
func (m *Screen) String() string { return proto.CompactTextString(m) }
func (*Screen) ProtoMessage()    {}
func (*Screen) Descriptor() ([]byte, []int) {
	return fileDescriptor_88b91daf5f3c2b1a, []int{10}
}
func (m *Screen) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Screen.Unmarshal(m, b)
}
func (m *Screen) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Screen.Marshal(b, m, deterministic)
}
func (m *Screen) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Screen.Merge(m, src)
}
func (m *Screen) XXX_Size() int {
	return xxx_messageInfo_Screen.Size(m)
}
func (m *Screen) XXX_DiscardUnknown() {
	xxx_messageInfo_Screen.DiscardUnknown(m)
}

var xxx_messageInfo_Screen proto.InternalMessageInfo

func (m *Screen) GetScreenWidth() int32 {
	if m != nil {
		return m.ScreenWidth
	}
	return 0
}

func (m *Screen) GetScreenHeight() int32 {
	if m != nil {
		return m.ScreenHeight
	}
	return 0
}

type Rectangle struct {
	CardId               int32    `protobuf:"varint,1,opt,name=card_id,json=cardId,proto3" json:"CardID"`
	CardCode             string   `protobuf:"bytes,2,opt,name=card_code,json=cardCode,proto3" json:"CardCode"`
	TopLeftX             int32    `protobuf:"varint,3,opt,name=top_left_x,json=topLeftX,proto3" json:"TopLeftX"`
	TopRightX            int32    `protobuf:"varint,4,opt,name=top_right_x,json=topRightX,proto3" json:"RopRightX"`
	Width                int32    `protobuf:"varint,5,opt,name=width,proto3" json:"width,omitempty"`
	Height               int32    `protobuf:"varint,6,opt,name=height,proto3" json:"height,omitempty"`
	LocalPlayer          bool     `protobuf:"varint,7,opt,name=local_player,json=localPlayer,proto3" json:"LocalPlayer"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Rectangle) Reset()         { *m = Rectangle{} }
func (m *Rectangle) String() string { return proto.CompactTextString(m) }
func (*Rectangle) ProtoMessage()    {}
func (*Rectangle) Descriptor() ([]byte, []int) {
	return fileDescriptor_88b91daf5f3c2b1a, []int{11}
}
func (m *Rectangle) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Rectangle.Unmarshal(m, b)
}
func (m *Rectangle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Rectangle.Marshal(b, m, deterministic)
}
func (m *Rectangle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Rectangle.Merge(m, src)
}
func (m *Rectangle) XXX_Size() int {
	return xxx_messageInfo_Rectangle.Size(m)
}
func (m *Rectangle) XXX_DiscardUnknown() {
	xxx_messageInfo_Rectangle.DiscardUnknown(m)
}

var xxx_messageInfo_Rectangle proto.InternalMessageInfo

func (m *Rectangle) GetCardId() int32 {
	if m != nil {
		return m.CardId
	}
	return 0
}

func (m *Rectangle) GetCardCode() string {
	if m != nil {
		return m.CardCode
	}
	return ""
}

func (m *Rectangle) GetTopLeftX() int32 {
	if m != nil {
		return m.TopLeftX
	}
	return 0
}

func (m *Rectangle) GetTopRightX() int32 {
	if m != nil {
		return m.TopRightX
	}
	return 0
}

func (m *Rectangle) GetWidth() int32 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *Rectangle) GetHeight() int32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *Rectangle) GetLocalPlayer() bool {
	if m != nil {
		return m.LocalPlayer
	}
	return false
}

type CardPositions struct {
	PlayerName           string       `protobuf:"bytes,1,opt,name=player_name,json=playerName,proto3" json:"PlayerName"`
	OpponentName         string       `protobuf:"bytes,2,opt,name=opponent_name,json=opponentName,proto3" json:"OpponentName"`
	GameState            string       `protobuf:"bytes,3,opt,name=game_state,json=gameState,proto3" json:"GameState"`
	Screen               *Screen      `protobuf:"bytes,4,opt,name=screen,proto3" json:"screen,omitempty"`
	Rectangles           []*Rectangle `protobuf:"bytes,5,rep,name=rectangles,proto3" json:"rectangles,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *CardPositions) Reset()         { *m = CardPositions{} }
func (m *CardPositions) String() string { return proto.CompactTextString(m) }
func (*CardPositions) ProtoMessage()    {}
func (*CardPositions) Descriptor() ([]byte, []int) {
	return fileDescriptor_88b91daf5f3c2b1a, []int{12}
}
func (m *CardPositions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CardPositions.Unmarshal(m, b)
}
func (m *CardPositions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CardPositions.Marshal(b, m, deterministic)
}
func (m *CardPositions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CardPositions.Merge(m, src)
}
func (m *CardPositions) XXX_Size() int {
	return xxx_messageInfo_CardPositions.Size(m)
}
func (m *CardPositions) XXX_DiscardUnknown() {
	xxx_messageInfo_CardPositions.DiscardUnknown(m)
}

var xxx_messageInfo_CardPositions proto.InternalMessageInfo

func (m *CardPositions) GetPlayerName() string {
	if m != nil {
		return m.PlayerName
	}
	return ""
}

func (m *CardPositions) GetOpponentName() string {
	if m != nil {
		return m.OpponentName
	}
	return ""
}

func (m *CardPositions) GetGameState() string {
	if m != nil {
		return m.GameState
	}
	return ""
}

func (m *CardPositions) GetScreen() *Screen {
	if m != nil {
		return m.Screen
	}
	return nil
}

func (m *CardPositions) GetRectangles() []*Rectangle {
	if m != nil {
		return m.Rectangles
	}
	return nil
}

type GameResult struct {
	GameId               int32    `protobuf:"varint,1,opt,name=game_id,json=gameId,proto3" json:"GameID"`
	LocalPlayerWon       bool     `protobuf:"varint,2,opt,name=local_player_won,json=localPlayerWon,proto3" json:"LocalPlayerWon"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GameResult) Reset()         { *m = GameResult{} }
func (m *GameResult) String() string { return proto.CompactTextString(m) }
func (*GameResult) ProtoMessage()    {}
func (*GameResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_88b91daf5f3c2b1a, []int{13}
}
func (m *GameResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameResult.Unmarshal(m, b)
}
func (m *GameResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameResult.Marshal(b, m, deterministic)
}
func (m *GameResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameResult.Merge(m, src)
}
func (m *GameResult) XXX_Size() int {
	return xxx_messageInfo_GameResult.Size(m)
}
func (m *GameResult) XXX_DiscardUnknown() {
	xxx_messageInfo_GameResult.DiscardUnknown(m)
}

var xxx_messageInfo_GameResult proto.InternalMessageInfo

func (m *GameResult) GetGameId() int32 {
	if m != nil {
		return m.GameId
	}
	return 0
}

func (m *GameResult) GetLocalPlayerWon() bool {
	if m != nil {
		return m.LocalPlayerWon
	}
	return false
}

func init() {
	proto.RegisterType((*Core)(nil), "runeterra.Core")
	proto.RegisterType((*ID)(nil), "runeterra.ID")
	proto.RegisterType((*Keyword)(nil), "runeterra.Keyword")
	proto.RegisterType((*Region)(nil), "runeterra.Region")
	proto.RegisterType((*SpellSpeed)(nil), "runeterra.SpellSpeed")
	proto.RegisterType((*Rarity)(nil), "runeterra.Rarity")
	proto.RegisterType((*Set)(nil), "runeterra.Set")
	proto.RegisterType((*Card)(nil), "runeterra.Card")
	proto.RegisterType((*Asset)(nil), "runeterra.Asset")
	proto.RegisterType((*Deck)(nil), "runeterra.Deck")
	proto.RegisterMapType((map[string]int64)(nil), "runeterra.Deck.CardsInDeckEntry")
	proto.RegisterType((*Screen)(nil), "runeterra.Screen")
	proto.RegisterType((*Rectangle)(nil), "runeterra.Rectangle")
	proto.RegisterType((*CardPositions)(nil), "runeterra.CardPositions")
	proto.RegisterType((*GameResult)(nil), "runeterra.GameResult")
}

func init() { proto.RegisterFile("proto/runeterra.proto", fileDescriptor_88b91daf5f3c2b1a) }

var fileDescriptor_88b91daf5f3c2b1a = []byte{
	// 1210 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x56, 0xdd, 0x8e, 0xdb, 0x44,
	0x14, 0x26, 0xff, 0xc9, 0x49, 0x76, 0x37, 0x9d, 0x6e, 0x8b, 0x55, 0x21, 0x25, 0x32, 0x12, 0x6c,
	0x69, 0xbb, 0x2b, 0x0a, 0x15, 0x08, 0x50, 0x45, 0xb3, 0x8b, 0xda, 0x15, 0x15, 0x54, 0xb3, 0x45,
	0xad, 0xb8, 0xb1, 0x26, 0xf6, 0x24, 0xb1, 0xd6, 0xf5, 0x58, 0x9e, 0x49, 0x77, 0x73, 0x8d, 0xc4,
	0x33, 0xf0, 0x48, 0x5c, 0xf2, 0x04, 0xe1, 0x3e, 0x4f, 0xc0, 0x25, 0x3a, 0x67, 0x9c, 0x78, 0x92,
	0xf6, 0xa2, 0x57, 0x39, 0xe7, 0x3b, 0xdf, 0x19, 0x7b, 0xce, 0xcf, 0x17, 0xc3, 0xad, 0x2c, 0x57,
	0x46, 0x9d, 0xe4, 0xf3, 0x54, 0x1a, 0x99, 0xe7, 0xe2, 0x98, 0x7c, 0xd6, 0xd9, 0x00, 0x77, 0x1e,
	0x4c, 0x63, 0x33, 0x9b, 0x8f, 0x8f, 0x43, 0xf5, 0xe6, 0x64, 0xaa, 0xa6, 0xea, 0x84, 0x18, 0xe3,
	0xf9, 0x84, 0x3c, 0x9b, 0x8e, 0x96, 0xcd, 0xf4, 0xff, 0xad, 0x40, 0xfd, 0x54, 0xe5, 0x92, 0x1d,
	0x43, 0xfb, 0x52, 0x2e, 0xae, 0x54, 0x1e, 0x69, 0xaf, 0x32, 0xac, 0x1d, 0x75, 0x1f, 0xb2, 0xe3,
	0xf2, 0x31, 0x3f, 0xdb, 0x10, 0xdf, 0x70, 0xd8, 0x3d, 0x68, 0xe5, 0x72, 0x1a, 0xab, 0x54, 0x7b,
	0x55, 0xa2, 0xdf, 0x70, 0xe8, 0x9c, 0x22, 0x7c, 0xcd, 0x60, 0x4f, 0xa0, 0xa7, 0x33, 0x99, 0x24,
	0x81, 0xce, 0xa4, 0x8c, 0xb4, 0x57, 0xa3, 0x8c, 0x3d, 0x27, 0xe3, 0xfc, 0x6c, 0x74, 0xb0, 0x5a,
	0x0e, 0xba, 0x44, 0xbb, 0x20, 0x16, 0x77, 0x1d, 0xf6, 0x0d, 0xb4, 0x73, 0x91, 0xc7, 0x26, 0x96,
	0xda, 0xab, 0xbf, 0x2f, 0xbd, 0xb7, 0x5a, 0x0e, 0x36, 0x14, 0xbe, 0xb1, 0xfc, 0x1f, 0xa1, 0x7a,
	0x7e, 0xc6, 0x3e, 0x83, 0x76, 0x2a, 0xde, 0xc8, 0x20, 0x97, 0x13, 0xaf, 0x32, 0xac, 0x1c, 0x75,
	0x46, 0xdd, 0xd5, 0x72, 0xd0, 0x42, 0x8c, 0xcb, 0x09, 0x5f, 0x1b, 0x8c, 0x41, 0x1d, 0x4d, 0xaf,
	0x8a, 0x1c, 0x4e, 0xb6, 0xff, 0x12, 0x5a, 0xc5, 0xfd, 0xd9, 0xe7, 0x50, 0x8d, 0x23, 0x3a, 0xe0,
	0x9d, 0xe7, 0xb7, 0xff, 0x59, 0x0e, 0x2a, 0xab, 0xe5, 0xe0, 0x23, 0x5e, 0x8d, 0x23, 0x36, 0x84,
	0x6e, 0x24, 0x75, 0x98, 0xc7, 0x99, 0x89, 0x55, 0x5a, 0x1c, 0xe7, 0x42, 0xfe, 0x1f, 0x15, 0x68,
	0xda, 0x3a, 0x7d, 0xf8, 0xa9, 0x3e, 0xf4, 0xc4, 0x78, 0x9c, 0xcb, 0xb7, 0xb1, 0x70, 0x8e, 0xdd,
	0xc2, 0xd8, 0x7d, 0x60, 0x71, 0xa8, 0xd2, 0x40, 0x8c, 0xb5, 0x4a, 0xe6, 0x46, 0x06, 0x99, 0x30,
	0x33, 0xaf, 0x46, 0xcc, 0x3e, 0x46, 0x9e, 0x14, 0x81, 0x17, 0xc2, 0xcc, 0xfc, 0x47, 0x00, 0x17,
	0x9b, 0x2a, 0x7f, 0xf0, 0x8b, 0xf8, 0x5f, 0x42, 0x93, 0x63, 0x81, 0x17, 0x1f, 0x9e, 0xf2, 0x10,
	0x6a, 0x17, 0xd2, 0xb0, 0x7b, 0xd0, 0x08, 0x45, 0x39, 0x64, 0x07, 0x4e, 0xca, 0xa9, 0xc8, 0xa3,
	0x51, 0x9d, 0x12, 0x2c, 0xc7, 0xff, 0xaf, 0x09, 0x75, 0x44, 0xd9, 0x11, 0xb4, 0x11, 0x39, 0x55,
	0x91, 0x2c, 0xda, 0x47, 0xed, 0x5e, 0x63, 0x7c, 0x63, 0xbd, 0xaf, 0x81, 0xec, 0x31, 0xf4, 0x85,
	0xd6, 0x2a, 0x8c, 0x85, 0x91, 0x51, 0x60, 0x1f, 0x8f, 0x23, 0xd8, 0x19, 0xdd, 0x5c, 0x2d, 0x07,
	0x07, 0x65, 0x0c, 0x9f, 0xa5, 0xf9, 0x2e, 0xc0, 0x9e, 0xc1, 0xe1, 0x4e, 0x3e, 0xce, 0x91, 0x9d,
	0xc3, 0xce, 0xe8, 0xf6, 0x6a, 0x39, 0x60, 0xdb, 0x29, 0x5c, 0x4e, 0x34, 0x7f, 0x0f, 0xc6, 0x8e,
	0xa0, 0x29, 0xb4, 0x96, 0x46, 0x7b, 0x0d, 0xba, 0x7e, 0xdf, 0xb9, 0xfe, 0x13, 0x0c, 0xf0, 0x22,
	0xce, 0x6e, 0x43, 0xd3, 0x6e, 0x8f, 0xd7, 0xa4, 0x9b, 0x14, 0x1e, 0xbb, 0x0f, 0x60, 0x2d, 0x1a,
	0xe5, 0x16, 0xd5, 0x62, 0x6f, 0xb5, 0x1c, 0x74, 0x2c, 0x8a, 0xc3, 0x5c, 0x9a, 0x78, 0x8a, 0x30,
	0x46, 0x84, 0x97, 0x5e, 0x7b, 0x58, 0x39, 0xaa, 0xf1, 0xc2, 0xc3, 0x2a, 0x85, 0x4a, 0x1b, 0xaf,
	0x43, 0x28, 0xd9, 0xc8, 0x9d, 0x49, 0x91, 0x98, 0x99, 0x07, 0x96, 0x6b, 0xbd, 0xdd, 0x51, 0xee,
	0xbe, 0x33, 0xca, 0xec, 0x7b, 0x38, 0x70, 0xdc, 0x20, 0x17, 0x57, 0x5e, 0x8f, 0x5e, 0x8c, 0xad,
	0x96, 0x83, 0x7d, 0x27, 0xc4, 0xc5, 0x15, 0xdf, 0xf1, 0xd9, 0x09, 0x74, 0x27, 0x89, 0x78, 0xab,
	0xf2, 0xc0, 0xc8, 0x6b, 0xe3, 0xed, 0x51, 0xe2, 0xfe, 0x6a, 0x39, 0x00, 0x0b, 0xbf, 0x94, 0xd7,
	0x86, 0x3b, 0x36, 0x26, 0x88, 0xdc, 0xc4, 0xda, 0x04, 0xd4, 0xe8, 0xfd, 0x32, 0xc1, 0xc2, 0xbf,
	0xe0, 0x2a, 0x3b, 0x36, 0xbb, 0xe3, 0x48, 0xdb, 0x01, 0xb6, 0xcc, 0x91, 0xb1, 0x87, 0xd0, 0x2b,
	0x6c, 0xdb, 0xd2, 0x3e, 0xb5, 0x94, 0xa4, 0xa8, 0xc0, 0xa9, 0x97, 0xae, 0x83, 0x2f, 0xe0, 0xa8,
	0x99, 0x77, 0xa3, 0x7c, 0x81, 0x52, 0xb0, 0xb8, 0x63, 0x53, 0x2f, 0x69, 0x5b, 0x3c, 0x56, 0xf4,
	0xd2, 0xee, 0x0e, 0xf6, 0x92, 0x2c, 0xea, 0xe5, 0x4d, 0xa7, 0x97, 0x84, 0xda, 0x5e, 0xae, 0x4d,
	0xe6, 0x41, 0x4b, 0xcf, 0xc7, 0x66, 0x91, 0x49, 0xef, 0x90, 0x8e, 0x59, 0xbb, 0xec, 0x13, 0xe8,
	0xe8, 0x79, 0x26, 0x73, 0x8a, 0xdd, 0xa2, 0x58, 0x09, 0x60, 0xaf, 0x29, 0x70, 0xdb, 0x6e, 0x04,
	0x61, 0x43, 0xe8, 0x86, 0x2a, 0x49, 0x64, 0x68, 0xe2, 0x71, 0x22, 0xbd, 0x8f, 0x87, 0x95, 0xa3,
	0x36, 0x77, 0x21, 0x3f, 0x84, 0x06, 0x0d, 0x24, 0xea, 0xc9, 0x14, 0x95, 0x73, 0x5b, 0x4f, 0x2a,
	0x56, 0x4f, 0x30, 0xe2, 0xea, 0x09, 0xb2, 0x27, 0xf3, 0x24, 0xd9, 0x61, 0xdb, 0x65, 0xec, 0x63,
	0x64, 0x4b, 0x7d, 0xfe, 0xae, 0x40, 0xfd, 0x4c, 0x86, 0x97, 0xec, 0x2e, 0x74, 0x22, 0x19, 0x5e,
	0x06, 0xe1, 0xce, 0x82, 0x63, 0xd0, 0x2e, 0x78, 0x54, 0x58, 0xec, 0x37, 0xd8, 0xa3, 0x0d, 0x0e,
	0xe2, 0x34, 0x40, 0xb0, 0xf8, 0xfb, 0x19, 0x3a, 0x9b, 0x84, 0x59, 0xa4, 0x26, 0xfa, 0x3c, 0x45,
	0xfb, 0xa7, 0xd4, 0xe4, 0x0b, 0xdb, 0x54, 0x07, 0xe5, 0xdd, 0xb0, 0x74, 0xee, 0x3c, 0x86, 0xfe,
	0x6e, 0x06, 0xeb, 0x43, 0xed, 0x52, 0x2e, 0x8a, 0xbb, 0xa2, 0xc9, 0x0e, 0xa1, 0xf1, 0x56, 0x24,
	0x73, 0x2b, 0x2f, 0x35, 0x6e, 0x9d, 0xef, 0xaa, 0xdf, 0x56, 0x7c, 0x0d, 0xcd, 0x8b, 0x30, 0x97,
	0x32, 0xc5, 0x91, 0xd2, 0x64, 0x05, 0x57, 0x71, 0x54, 0x94, 0xaa, 0x61, 0x9f, 0x6e, 0x19, 0xaf,
	0x10, 0xe6, 0x5d, 0x5d, 0x3a, 0xec, 0x11, 0xec, 0x15, 0x39, 0x33, 0x19, 0x4f, 0x67, 0x86, 0xce,
	0x6f, 0x8c, 0xfa, 0xab, 0xe5, 0xa0, 0x67, 0x93, 0x9e, 0x11, 0xce, 0x8b, 0xa3, 0xad, 0xe7, 0xff,
	0x55, 0x85, 0x0e, 0x97, 0xa1, 0x11, 0xe9, 0x34, 0x91, 0xec, 0x53, 0x68, 0x91, 0x36, 0x15, 0x7a,
	0xdc, 0x18, 0xc1, 0x6a, 0x39, 0x68, 0xe2, 0xad, 0xce, 0xcf, 0x78, 0x13, 0x43, 0xe7, 0x11, 0x56,
	0x9a, 0x48, 0x54, 0xe9, 0x6a, 0x59, 0xe9, 0xd3, 0x77, 0xa5, 0xf4, 0x0b, 0x00, 0xa3, 0xb2, 0x20,
	0x91, 0x13, 0x13, 0x5c, 0xd3, 0x3f, 0x48, 0xc3, 0x72, 0x5f, 0xaa, 0xec, 0xb9, 0x9c, 0x98, 0xd7,
	0xbc, 0x6d, 0x0a, 0x8b, 0x3d, 0x80, 0x2e, 0x72, 0x73, 0x7c, 0xad, 0xe0, 0xda, 0xab, 0x13, 0x99,
	0x66, 0x99, 0xab, 0x8c, 0x23, 0xfa, 0x9a, 0x77, 0xcc, 0xda, 0xc4, 0x3a, 0xda, 0xe2, 0x34, 0x90,
	0xc8, 0xad, 0x63, 0x15, 0x88, 0xae, 0xdf, 0x24, 0xb8, 0xf0, 0xb0, 0xa2, 0x89, 0x0a, 0x45, 0x12,
	0x64, 0x89, 0x58, 0xc8, 0x9c, 0x54, 0xaf, 0x6d, 0x2b, 0xfa, 0x1c, 0xf1, 0x17, 0x04, 0xf3, 0x6e,
	0x52, 0x3a, 0xfe, 0x9f, 0x55, 0xd8, 0xc3, 0x3b, 0xbd, 0x50, 0x3a, 0x36, 0xf4, 0x11, 0x72, 0x02,
	0x5d, 0x9b, 0x6f, 0x75, 0xa3, 0x52, 0xae, 0xad, 0x4d, 0xb1, 0xba, 0x91, 0x6d, 0x6c, 0x6c, 0x8a,
	0xca, 0x32, 0x95, 0xca, 0xb4, 0x90, 0x1a, 0x5b, 0x2e, 0x6a, 0xca, 0xaf, 0x45, 0x80, 0x92, 0x7a,
	0xca, 0xf1, 0x70, 0xab, 0x69, 0x61, 0xb4, 0x11, 0x46, 0xda, 0x3f, 0x5e, 0x5b, 0x89, 0xa7, 0xe2,
	0x8d, 0xbc, 0x40, 0x90, 0x77, 0xa6, 0x6b, 0x93, 0xdd, 0x85, 0xa6, 0x6d, 0x29, 0xd5, 0x6c, 0xfb,
	0x33, 0xca, 0x76, 0x9e, 0x17, 0x04, 0xf6, 0x35, 0x4a, 0x7f, 0xd1, 0xec, 0xf5, 0x1f, 0xc8, 0xe1,
	0xd6, 0x57, 0x57, 0x11, 0xe4, 0x0e, 0xcf, 0x57, 0x00, 0x4f, 0xe9, 0xe3, 0x46, 0xcf, 0x13, 0x83,
	0x33, 0x42, 0x2f, 0xb7, 0x3d, 0x23, 0x48, 0xc0, 0x19, 0xc1, 0xd0, 0x79, 0xc4, 0x7e, 0x80, 0xbe,
	0x5b, 0xef, 0xe0, 0xaa, 0xf8, 0xd4, 0x68, 0x5b, 0x41, 0x77, 0x6a, 0xfe, 0x4a, 0xa5, 0x7c, 0x3f,
	0xd9, 0xf2, 0x47, 0xad, 0xdf, 0x1b, 0xf6, 0x9b, 0xb3, 0x49, 0x3f, 0x5f, 0xfd, 0x1f, 0x00, 0x00,
	0xff, 0xff, 0x58, 0xc9, 0xf7, 0xdc, 0xb5, 0x0a, 0x00, 0x00,
}
